(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{778:function(t,a,v){"use strict";v.r(a);var _=v(17),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数字转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字转换"}},[t._v("#")]),t._v(" 数字转换")]),t._v(" "),v("h2",{attrs:{id:"计算机中数的表示"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机中数的表示"}},[t._v("#")]),t._v(" 计算机中数的表示")]),t._v(" "),v("blockquote",[v("p",[t._v("在计算机中能被硬件直接识别处理的为数的表示。")])]),t._v(" "),v("h3",{attrs:{id:"无符号数和有符号数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无符号数和有符号数"}},[t._v("#")]),t._v(" 无符号数和有符号数")]),t._v(" "),v("h4",{attrs:{id:"无符号数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无符号数"}},[t._v("#")]),t._v(" 无符号数")]),t._v(" "),v("blockquote",[v("p",[t._v("无正负号的数据")])]),t._v(" "),v("h5",{attrs:{id:"表示与存储"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#表示与存储"}},[t._v("#")]),t._v(" 表示与存储")]),t._v(" "),v("p",[t._v("无符号数只有数值部分，使用寄存器和存储器按规定的长度保存到计算机中，如果无符号数保存在寄存器中，寄存器的长度直接反映了无符号数的表示范围。")]),t._v(" "),v("p",[t._v("举例来说我们的寄存器是八位的话，我们的无符号数的范围就为0~255，如果我们的无符号数保存在16位寄存器中的话，它的表示范围位0~65535.")]),t._v(" "),v("h4",{attrs:{id:"有符号数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#有符号数"}},[t._v("#")]),t._v(" 有符号数")]),t._v(" "),v("blockquote",[v("p",[t._v("有正负号的数")])]),t._v(" "),v("h5",{attrs:{id:"表示与存储-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#表示与存储-2"}},[t._v("#")]),t._v(" 表示与存储")]),t._v(" "),v("p",[t._v("有符号数包含数值部分与符号部分，只要将这两个部分保存到寄存器和存储器中完成存储。")]),t._v(" "),v("h5",{attrs:{id:"机器数与真值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#机器数与真值"}},[t._v("#")]),t._v(" 机器数与真值")]),t._v(" "),v("blockquote",[v("p",[t._v("保存在计算机中的数为机器数，真值为我们使用的数据真实值")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("真值")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("机器数")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("带符号的数（+0.1011）")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("符号数字化的数（将符号转化为数据）（0小数点位1011）")])])])]),t._v(" "),v("p",[t._v("由表可知，我们真值即真实的数据如果想要在计算机中保存为机器数，则需要将真值拆解为三个部分：符号，小数点位置，数值位。")]),t._v(" "),v("p",[t._v("但是计算机中没有设计存储小数点的硬件，所以我们需要以某种约定俗称的方式来表达小数点，比如：")]),t._v(" "),v("ol",[v("li",[t._v("+0.1011：0|小数点位置1011")]),t._v(" "),v("li",[t._v("+1100：1|1100小数点位置")])]),t._v(" "),v("p",[t._v("两个小数点的位置分为两个类别，分别叫做小数定点机，整数定点机。")]),t._v(" "),v("p",[t._v("这里可能会产生疑问，不过这么理解会好一些：我们定义了不同的数据类型，就会按照这种数据类型在计算机中的约定方式存储。")]),t._v(" "),v("p",[t._v("我们提到的符号数字化，符号数值化，这种表示方式称为"),v("strong",[t._v("原码表示法")])]),t._v(" "),v("h5",{attrs:{id:"原码表示法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原码表示法"}},[t._v("#")]),t._v(" 原码表示法")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("整数：[X]原=0,x (2^n>x>0) / 2^n - x (0 >= x > -2^n)，其中n为数值部分位置，0为符号位，x为真值得数值部分")]),t._v(" "),v("p",[t._v("+1110 = 0，1110")]),t._v(" "),v("p",[t._v("-1110 = 2^4+1110 = 1,1110")])]),t._v(" "),v("li",[v("p",[t._v("小数：[X]原=x（1>x>=0）/ 1-x (0>=x>-1)")])])]),t._v(" "),v("h5",{attrs:{id:"补码表示法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#补码表示法"}},[t._v("#")]),t._v(" 补码表示法")]),t._v(" "),v("blockquote",[v("p",[t._v("补得概念可以在时钟上体现，以时钟12为mo，12为一个周期，逆时针和顺时针操作代表着加和减，比如我们可以将-3用9来表示。")])]),t._v(" "),v("ol",[v("li",[t._v("一个负数加上"),v("strong",[t._v("模")]),t._v("即得该负数的补数")]),t._v(" "),v("li",[t._v("一个正数和一个负数互为补数时，他们绝对值的和即为"),v("strong",[t._v("模")]),t._v("数")])]),t._v(" "),v("p",[t._v("计数器是以16为模数的")]),t._v(" "),v("h5",{attrs:{id:"反码表示法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反码表示法"}},[t._v("#")]),t._v(" 反码表示法")]),t._v(" "),v("p",[t._v("非符号位取反即可")]),t._v(" "),v("h2",{attrs:{id:"计算机的运算方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机的运算方法"}},[t._v("#")]),t._v(" 计算机的运算方法")]),t._v(" "),v("h2",{attrs:{id:"运算器设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器设计"}},[t._v("#")]),t._v(" 运算器设计")])])}),[],!1,null,null,null);a.default=r.exports}}]);
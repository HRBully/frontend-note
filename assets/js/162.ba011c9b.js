(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{779:function(v,_,t){"use strict";t.r(_);var a=t(17),r=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"数据链路层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[v._v("#")]),v._v(" 数据链路层")]),v._v(" "),t("h2",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[v._v("#")]),v._v(" 概念")]),v._v(" "),t("h3",{attrs:{id:"封装成帧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装成帧"}},[v._v("#")]),v._v(" 封装成帧")]),v._v(" "),t("p",[v._v("将一段数据得前后分别添加首部和尾部，构成了一共帧，且其首部和尾部得重要作用就是帧定界，对帧进行一个边界的划分")]),v._v(" "),t("p",[v._v("帧首+帧数据部分+帧尾")]),v._v(" "),t("h3",{attrs:{id:"透明传输"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#透明传输"}},[v._v("#")]),v._v(" 透明传输")]),v._v(" "),t("p",[v._v("不管传数据为何比特组合，都能在链路上传输，所以数据信息和控制信息发生混淆的时候都能及时处理")]),v._v(" "),t("h3",{attrs:{id:"差错检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#差错检测"}},[v._v("#")]),v._v(" 差错检测")]),v._v(" "),t("blockquote",[t("p",[v._v("采用各种差错检测措施和手段来进行差错检测")])]),v._v(" "),t("p",[v._v("误码率=传输错误比特数/传输得比特总数")]),v._v(" "),t("ul",[t("li",[v._v("前向纠错：接收方不仅检测错误，还可以进行纠正。")]),v._v(" "),t("li",[v._v("自动请求重发：接收方检测错误，以某种方法通知发送方重发，直到正确。")])]),v._v(" "),t("p",[t("strong",[v._v("差错检验编码")])]),v._v(" "),t("p",[v._v("通过约定关系，将差错检验编码以一种信息码发送，以约定得规则进行判断，根据判断结果来判断传输信息的正确性")]),v._v(" "),t("p",[t("strong",[v._v("CRC冗余码")])]),v._v(" "),t("p",[v._v("给定一共m bit的帧，发送方将生成一个r bit的序列称为帧检验序列FCS，形成的将有m+r bit组成，刚好可以被某个预先约定好的P整除，接受方用相同的p去除接受到的数据帧，无余数则认为无差错，否则错误")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("多项式码")]),v._v(" "),t("p",[v._v("任何二进制数位串成的代码可以和一共只含有0和1两个系数的多项式建立的一一对应的关系，一个k位的帧可以看为成x^k-1到x^0的多项式的系数序列")])]),v._v(" "),t("li",[t("p",[v._v("多项式运算")]),v._v(" "),t("ol",[t("li",[v._v("加法不进位，减法不错位，等同异或")]),v._v(" "),t("li",[v._v("乘除法类似二进制运算，加减法时模2规则")]),v._v(" "),t("li",[v._v("除法只要被除数的高位为1，商为1，不管后续位与除数比较")])])]),v._v(" "),t("li",[t("p",[v._v("FCS的生成")]),v._v(" "),t("ol",[t("li",[v._v("除数P，采用多项式表示法位P（X），其高低位为1")]),v._v(" "),t("li",[v._v("设P(X)为r阶，在m帧末尾附加r个0使帧为m+r")]),v._v(" "),t("li",[v._v("按模2除法用对应的P(X)的位串去除xM(X)，使得余数为R，为FCS。")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/HRBully/Img/main/image-20220516104203166.png",alt:"image-20220516104203166"}})]),v._v(" "),t("p",[v._v("最后再将传输的帧进行除法，如果余数为0则无差错")]),v._v(" "),t("p",[v._v("现阶段只能判断有无差错，但是无法判断哪个地方出现了差错")]),v._v(" "),t("h2",{attrs:{id:"基本协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本协议"}},[v._v("#")]),v._v(" 基本协议")]),v._v(" "),t("h3",{attrs:{id:"完全理想得传输假定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完全理想得传输假定"}},[v._v("#")]),v._v(" 完全理想得传输假定")]),v._v(" "),t("blockquote",[t("p",[v._v("在理想化得情况下，数据链路层不需要协议的支持，就可以保证数据得正确传输")])]),v._v(" "),t("ol",[t("li",[v._v("链路是理想得传输信道，传输数据不会出错和丢失")]),v._v(" "),t("li",[v._v("不管发送方得发送速率如何，接受方总能及时接受和处理并上交主机")])]),v._v(" "),t("h3",{attrs:{id:"停止等待协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#停止等待协议"}},[v._v("#")]),v._v(" 停止等待协议")]),v._v(" "),t("ol",[t("li",[v._v("发送一帧就暂停")]),v._v(" "),t("li",[v._v("收方收到数据帧交付主机，通知发送方表示已经接受到了，完成任务")]),v._v(" "),t("li",[v._v("此后发送方继续发送下一帧")])]),v._v(" "),t("h3",{attrs:{id:"差错事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#差错事件"}},[v._v("#")]),v._v(" 差错事件")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("帧出错：")]),v._v(" "),t("ul",[t("li",[v._v("接收方使用CRC可以进行差错检验，出现帧出错的时候接收方向发送方一个否认帧NAK")]),v._v(" "),t("li",[v._v("发送方在收到NAK后将重传出现差错的数据帧，直到收到ACK为止")])]),v._v(" "),t("p",[v._v("注意：（简单理解老传相同的帧，需要一个上限约束，在一定次数后向上层报告，不再重传）")]),v._v(" "),t("ul",[t("li",[v._v("为实现重发，发送方必须暂时保留已发送数据帧的副本，在收到ACK后再清除")]),v._v(" "),t("li",[v._v("当通信链路质量太差的时候发送方重传一定次数后不能重传，而是向上层报告")])])]),v._v(" "),t("li",[t("p",[v._v("帧丢失")]),v._v(" "),t("blockquote",[t("p",[v._v("帧的丢失容易造成死锁而无法继续进行下去")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("数据帧丢失：")]),v._v(" "),t("p",[v._v("结点A发送完一共数据帧启动一个超时重传计时器，如果设置的重传时间已经达到了上限值，依旧没有收到节点B的任何确认帧，则节点A重传前面所发的这一数据帧（"),t("strong",[v._v("备份重传")]),v._v("）")])]),v._v(" "),t("li",[t("p",[v._v("确认帧丢失：")]),v._v(" "),t("p",[v._v("确认帧丢失，采用超时重传后则接收方将收到重复帧")]),v._v(" "),t("p",[v._v("我们使每一个数据帧带上不同的发送"),t("strong",[v._v("序号")]),v._v("，每个发送一个新的帧将他的序号+1，若接收方收到序号相同的数据帧，就表明了出现了重复帧，则丢弃，接受方必须向发送方发送确认帧ACK，因为帧丢失。")]),v._v(" "),t("p",[t("strong",[v._v("序号")]),v._v("编码所占用的比特数是有限制的，发送序号由于增1的功能可能会出现重复，所以对于停止等待协议，由于每发送一共数据帧就停止等待，那么只需要"),t("strong",[v._v("一个比特")]),v._v("就足够了。（0/1）")])])])])]),v._v(" "),t("h3",{attrs:{id:"停等协议定量分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#停等协议定量分析"}},[v._v("#")]),v._v(" 停等协议定量分析")]),v._v(" "),t("p",[t("strong",[v._v("tT")]),v._v("（包含了tf和tout）")]),v._v(" "),t("ul",[t("li",[v._v("数据帧发送时间-tf、")])]),v._v(" "),t("p",[t("strong",[v._v("tout")]),v._v("（设置的重传时间）")]),v._v(" "),t("ul",[t("li",[v._v("传播时延-tp")]),v._v(" "),t("li",[v._v("处理时间-tpr")]),v._v(" "),t("li",[v._v("确认帧发送时间-ta")]),v._v(" "),t("li",[v._v("传播时延-tp")]),v._v(" "),t("li",[v._v("处理时间-tpr")])]),v._v(" "),t("p",[v._v("tT=tf+tout = tf+2tp")]),v._v(" "),t("p",[v._v("正确传送一个数据帧所需平均时间=tT/（1-P）")]),v._v(" "),t("h3",{attrs:{id:"连续arq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连续arq"}},[v._v("#")]),v._v(" 连续ARQ")]),v._v(" "),t("blockquote",[t("p",[v._v("发送完数据帧后不是停下等待数据帧，而是继续发后续的数据帧，这样做的好处就是大大提高了整个通信的吞吐量")])]),v._v(" "),t("p",[v._v("当出现"),t("strong",[v._v("错误帧")]),v._v("的时候")]),v._v(" "),t("ul",[t("li",[v._v("出现差错，发送否认帧")]),v._v(" "),t("li",[v._v("出现差错，不做任何响应")])]),v._v(" "),t("p",[t("strong",[v._v("但是连续ARQ在出现差错的时候需要重走N个帧，重新开始传，传输质量差的时候，连续ARQ不优与停等协议")])]),v._v(" "),t("h3",{attrs:{id:"滑动窗口协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口协议"}},[v._v("#")]),v._v(" 滑动窗口协议")]),v._v(" "),t("p",[v._v("发送方和接受方分别"),t("strong",[v._v("设定发送窗口")]),v._v("和"),t("strong",[v._v("接收窗口")])]),v._v(" "),t("ul",[t("li",[v._v("发送窗口：用来对发送端进行流量控制，大小Wt表示没有收到对方确认信息的情况下发送端最多可以发送数据帧的数目")]),v._v(" "),t("li",[v._v("当数据帧等于Wt大小限制，发送方必须停止发送，只要等到接受方的确认帧才能继续发送")])]),v._v(" "),t("p",[v._v("所以在滑动窗口大小Wr为1即发送窗口和接受窗口大小都为1则是个停止等待协议")]),v._v(" "),t("p",[t("strong",[v._v("Wt的大小一般为2^n-1")]),v._v("，3bit的不能超过7")]),v._v(" "),t("p",[v._v("且接受窗口+发送窗口不能大于2^n")]),v._v(" "),t("h2",{attrs:{id:"点到点的数据链路示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点到点的数据链路示例"}},[v._v("#")]),v._v(" 点到点的数据链路示例")]),v._v(" "),t("h3",{attrs:{id:"hdlc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hdlc"}},[v._v("#")]),v._v(" HDLC")]),v._v(" "),t("blockquote",[t("p",[v._v("面向比特的链路控制规程HDLC")])]),v._v(" "),t("h3",{attrs:{id:"ppp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ppp"}},[v._v("#")]),v._v(" PPP")]),v._v(" "),t("p",[t("strong",[v._v("三个组成部分")]),v._v("（首部，IP数据报，尾部）")]),v._v(" "),t("ul",[t("li",[v._v("一个将IP数据报封装到串行链路方法")]),v._v(" "),t("li",[v._v("一个用来建立配置测试数据链路连接的链路控制协议LCP")]),v._v(" "),t("li",[v._v("一套网络控制协议NCP，根据所支持的网络层选择不同的网络控制协议如IP等")])]),v._v(" "),t("p",[v._v("PPP有一个2个字节的协议字段")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/HRBully/Img/main/image-20220614155218790.png",alt:"image-20220614155218790"}})]),v._v(" "),t("p",[t("strong",[v._v("透明传输")])]),v._v(" "),t("blockquote",[t("p",[v._v("透明传输有异步传输和同步传输。")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("PPP在异步传输的时候，使用一种字符填充法")])]),v._v(" "),t("li",[t("p",[v._v("PPP在同步传输的时候，协议规定采用硬件来完成比特填充")])])]),v._v(" "),t("h2",{attrs:{id:"局域网"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局域网"}},[v._v("#")]),v._v(" 局域网")]),v._v(" "),t("h3",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[v._v("#")]),v._v(" 特点")]),v._v(" "),t("ol",[t("li",[v._v("网络为一个单位所拥有")]),v._v(" "),t("li",[v._v("地理范围和站点数目均有限")])]),v._v(" "),t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[v._v("#")]),v._v(" 优点")]),v._v(" "),t("ol",[t("li",[v._v("具有广播功能，从一共站点可以方便得访问全网，局域网得主机可以共享在局域网上得各种硬件和软件资源")]),v._v(" "),t("li",[v._v("便于系统得扩展和逐渐地演变，各种设备地位置可以灵活调整和改变")]),v._v(" "),t("li",[v._v("提高系统地可靠性，可用性，残存性")])]),v._v(" "),t("h3",{attrs:{id:"拓扑结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拓扑结构"}},[v._v("#")]),v._v(" 拓扑结构")]),v._v(" "),t("ul",[t("li",[v._v("星形网")]),v._v(" "),t("li",[v._v("环形网")]),v._v(" "),t("li",[v._v("总线网")])]),v._v(" "),t("h3",{attrs:{id:"防止冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防止冲突"}},[v._v("#")]),v._v(" 防止冲突")]),v._v(" "),t("p",[v._v("通过"),t("strong",[v._v("适配器")]),v._v("（网卡）进行一些功能，来解决冲突")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("先听后发")])]),v._v(" "),t("li",[t("strong",[v._v("边听边发")])]),v._v(" "),t("li",[t("strong",[v._v("冲突修正")])]),v._v(" "),t("li",[t("strong",[v._v("延迟再发")])])]),v._v(" "),t("h3",{attrs:{id:"csma-cd协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csma-cd协议"}},[v._v("#")]),v._v(" CSMA/CD协议")]),v._v(" "),t("p",[v._v("每个网卡都有一个MAC地址，相当于一个身份证号")]),v._v(" "),t("ul",[t("li",[v._v("通过将首地址绑定来实现一对一通信")]),v._v(" "),t("li",[v._v("总线缺点很大，若多台计算机或多台站点同时发送，就会发生碰撞")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/HRBully/Img/main/image-20220520140725020.png",alt:"image-20220520140725020"}})])])}),[],!1,null,null,null);_.default=r.exports}}]);
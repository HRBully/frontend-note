(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{696:function(e,r,t){"use strict";t.r(r);var o=t(17),a=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("后端一般采用MVC的架构，"),t("code",[e._v("Model")]),e._v("，"),t("code",[e._v("Controller")]),e._v("，"),t("code",[e._v("View")]),e._v("，请求通过"),t("code",[e._v("Controller")]),e._v("发送给"),t("code",[e._v("Model")]),e._v("，"),t("code",[e._v("Model")]),e._v("响应也通过"),t("code",[e._v("Controller")]),e._v("响应给"),t("code",[e._v("View")])]),e._v(" "),t("p",[e._v("一般在这条链路上增加一些日志等功能，会混入业务，所以需要"),t("strong",[e._v("面向切片")]),e._v("，在横截面来一刀，加入这些服务")]),e._v(" "),t("h2",{attrs:{id:"中间件-middleware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中间件-middleware"}},[e._v("#")]),e._v(" 中间件 Middleware")]),e._v(" "),t("p",[e._v("分为了全局中间件和路由中间件，全局中间件可以对每一个请求和响应进行一些拦截和处理，局部中间件可以对单独的路由进行处理")]),e._v(" "),t("h2",{attrs:{id:"guard-路由守卫"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#guard-路由守卫"}},[e._v("#")]),e._v(" Guard 路由守卫")]),e._v(" "),t("p",[t("code",[e._v("Guard")]),e._v("，在调用某个 Controller 之前判断权限，返回 true 或者 false 来决定是否放行")]),e._v(" "),t("h2",{attrs:{id:"interceptor-拦截器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#interceptor-拦截器"}},[e._v("#")]),e._v(" Interceptor 拦截器")]),e._v(" "),t("p",[e._v("在目标 Controller 方法前后加入一些逻辑")])])}),[],!1,null,null,null);r.default=a.exports}}]);
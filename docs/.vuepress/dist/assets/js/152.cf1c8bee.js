(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{775:function(a,t,v){"use strict";v.r(t);var _=v(17),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"cpu"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cpu"}},[a._v("#")]),a._v(" CPU")]),a._v(" "),v("p",[a._v("由运算器，cache，控制器三大部分构成")]),a._v(" "),v("h2",{attrs:{id:"控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[a._v("#")]),a._v(" 控制器")]),a._v(" "),v("blockquote",[v("p",[a._v("由程序计数器，指令寄存器，指令译码器，对序产生器，操作控制器构成")])]),a._v(" "),v("p",[v("strong",[a._v("作用：")])]),a._v(" "),v("ul",[v("li",[a._v("控制机器从内存中取出一条指令，并指出下一条指令在cache中的位置")]),a._v(" "),v("li",[a._v("对指令进行译码或测试，并产生相应的操作控制信号，送往相应的部件，启动规定的动作")]),a._v(" "),v("li",[a._v("指挥并控制CPU，数据cache，输入输出设备之间的数据的流动方向")])]),a._v(" "),v("h2",{attrs:{id:"运算器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算器"}},[a._v("#")]),a._v(" 运算器")]),a._v(" "),v("blockquote",[v("p",[a._v("由算术逻辑单元，通用寄存器，数据缓冲寄存器，状态条件寄存器构成")])]),a._v(" "),v("p",[v("strong",[a._v("作用：")])]),a._v(" "),v("ul",[v("li",[a._v("数据加工处理部件")]),a._v(" "),v("li",[a._v("由控制器发出的控制信号指挥进行运算")]),a._v(" "),v("li",[a._v("执行所有的算术运算")]),a._v(" "),v("li",[a._v("执行所有的逻辑运算，逻辑测试")])]),a._v(" "),v("h2",{attrs:{id:"主要寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要寄存器"}},[a._v("#")]),a._v(" 主要寄存器")]),a._v(" "),v("h3",{attrs:{id:"数据缓冲寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据缓冲寄存器"}},[a._v("#")]),a._v(" 数据缓冲寄存器")]),a._v(" "),v("p",[a._v("暂时存放ALU的运算结果，作为ALU运算结果和通用寄存器之间的信息传送中的缓冲")]),a._v(" "),v("h3",{attrs:{id:"指令寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令寄存器"}},[a._v("#")]),a._v(" 指令寄存器")]),a._v(" "),v("ul",[v("li",[a._v("保存当前正在执行的一条指令")]),a._v(" "),v("li",[a._v("指令寄存器用来存放从存储器中的取出的待执行的指令")]),a._v(" "),v("li",[a._v("在执行指令的过程中，指令寄存器的内容不允许发送变化，保证指令的全部功能")])]),a._v(" "),v("h3",{attrs:{id:"程序计数器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[a._v("#")]),a._v(" 程序计数器")]),a._v(" "),v("ul",[v("li",[a._v("存放正在执行指令的地址或即将执行的下一条指令的地址")]),a._v(" "),v("li",[a._v("顺序执行指令，每执行一条指令，PC的值+1")])]),a._v(" "),v("h3",{attrs:{id:"数据地址寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据地址寄存器"}},[a._v("#")]),a._v(" 数据地址寄存器")]),a._v(" "),v("ul",[v("li",[a._v("存放数据地址，保存当前CPU当前访问数据在cache存储器单元的地址")]),a._v(" "),v("li",[a._v("使用电位-脉冲形式存储")]),a._v(" "),v("li",[a._v("电位输入端对应数据信息位")]),a._v(" "),v("li",[a._v("脉冲输入端对应控制信号")]),a._v(" "),v("li",[a._v("在控制信号的作用下，瞬时地将信息打入寄存器")])]),a._v(" "),v("h3",{attrs:{id:"通用寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通用寄存器"}},[a._v("#")]),a._v(" 通用寄存器")]),a._v(" "),v("ul",[v("li",[a._v("当运算器地算术逻辑单元执行算术或者逻辑运算地时候为ALU提供一个工作区，暂时存放ALU运算地结果信息")]),a._v(" "),v("li",[a._v("CPU中地通用寄存器，多达64个")]),a._v(" "),v("li",[a._v("通用寄存器多用于地址指示器，变址寄存器，堆栈寄存器")])]),a._v(" "),v("h3",{attrs:{id:"状态条件寄存器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#状态条件寄存器"}},[a._v("#")]),a._v(" 状态条件寄存器")]),a._v(" "),v("h2",{attrs:{id:"操作控制器与时序控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作控制器与时序控制器"}},[a._v("#")]),a._v(" 操作控制器与时序控制器")]),a._v(" "),v("h3",{attrs:{id:"数据通路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据通路"}},[a._v("#")]),a._v(" 数据通路")]),a._v(" "),v("h3",{attrs:{id:"操作控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作控制器"}},[a._v("#")]),a._v(" 操作控制器")]),a._v(" "),v("h3",{attrs:{id:"操作控制器功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作控制器功能"}},[a._v("#")]),a._v(" 操作控制器功能")]),a._v(" "),v("h4",{attrs:{id:"硬布线控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#硬布线控制器"}},[a._v("#")]),a._v(" 硬布线控制器")]),a._v(" "),v("h4",{attrs:{id:"微程序控制器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微程序控制器"}},[a._v("#")]),a._v(" 微程序控制器")]),a._v(" "),v("h3",{attrs:{id:"时序产生器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时序产生器"}},[a._v("#")]),a._v(" 时序产生器")]),a._v(" "),v("blockquote",[v("p",[a._v("产生并发出计算机所需要的时许控制")])]),a._v(" "),v("h2",{attrs:{id:"指令周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指令周期"}},[a._v("#")]),a._v(" 指令周期")]),a._v(" "),v("p",[a._v("执行过程：")]),a._v(" "),v("ol",[v("li",[a._v("读取指令")]),a._v(" "),v("li",[a._v("分析指令")]),a._v(" "),v("li",[a._v("按指令规定内容执行指令")]),a._v(" "),v("li",[a._v("检查有无中断请求")])]),a._v(" "),v("h3",{attrs:{id:"基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("指令周期：取指周期+执行周期的时间总和")])]),a._v(" "),v("li",[v("p",[a._v("CPU周期：又称机器周期，总线周期，"),v("strong",[a._v("CPU从内存中读取的一条指令字所需要的最短时间")])]),a._v(" "),v("p",[a._v("PS：一个指令周期=n个cpu周期（至少包含一个取指和一个执行，n至少=2）")])]),a._v(" "),v("li",[v("p",[a._v("时钟周期：T周期。一个cpu周期内包含了诺干个时钟周期T（"),v("strong",[a._v("T与计算机主频互为倒数")]),a._v("）")]),a._v(" "),v("p",[a._v("PS：一个CPU周期=n个T周期")])])]),a._v(" "),v("h3",{attrs:{id:"时许产生器和控制方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时许产生器和控制方式"}},[a._v("#")]),a._v(" 时许产生器和控制方式")]),a._v(" "),v("ul",[v("li",[a._v("从时间来说：取指令事件发生在指令周期的第一个CPU周期，发送在取指令阶段，取数据发生在执行指令阶段。")]),a._v(" "),v("li",[a._v("从空间来说：如果取代码为指令，那么一定景经过DR送往指令寄存器，如果取出的代码为数据，那么一定送往运算器。")])]),a._v(" "),v("h3",{attrs:{id:"时序信号的作用与体制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时序信号的作用与体制"}},[a._v("#")]),a._v(" 时序信号的作用与体制")]),a._v(" "),v("ul",[v("li",[a._v("计算机协调动作需要时间标注，需要采用多级时许体制，而时间标志则用时许信号来体现")]),a._v(" "),v("li",[a._v("组成计算机硬件的特性决定了时许信号的基本体制为电位-脉冲制\n"),v("ol",[v("li",[a._v("电位输入端对应数据信息位")]),a._v(" "),v("li",[a._v("脉冲输入端对应控制信号")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);
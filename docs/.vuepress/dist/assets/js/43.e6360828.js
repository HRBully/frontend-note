(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{651:function(t,v,e){"use strict";e.r(v);var _=e(17),a=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"object-fit与aspect-ratio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-fit与aspect-ratio"}},[t._v("#")]),t._v(" object-fit与aspect-ratio")]),t._v(" "),e("blockquote",[e("p",[t._v("不知道大家会不会经常因为图片的适配而头疼，我经常苦恼于这个问题：如何合理地去裁剪图片，让父元素中的图片以规定的方式去展现。")])]),t._v(" "),e("p",[t._v("所以本文将从"),e("code",[t._v("aspect-ratio")]),t._v("与"),e("code",[t._v("object-fit")]),t._v("出发，分别了解两个属性的特性，学习如何结合两个新CSS属性来解决")]),t._v(" "),e("h2",{attrs:{id:"aspect-ratio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aspect-ratio"}},[t._v("#")]),t._v(" aspect-ratio")]),t._v(" "),e("p",[t._v("一般来说我们想要一张图片以固定的宽高比在不同的设备下让其显示得合理（也就是响应式）可以使用相对长度单位，直接设定"),e("code",[t._v("width")]),t._v("与"),e("code",[t._v("heigth")]),t._v("大小，并需要考虑到父元素的高宽设定，我们需要给父元素设定相同的宽度，但是这样并不优雅")]),t._v(" "),e("p",[t._v("而"),e("code",[t._v("aspect-ratio")]),t._v("的出现改变了这一现状，它可以一设永逸，官方文档给出该属性的解释为：为容器规定了一个"),e("strong",[t._v("期待的纵横比")]),t._v("下面我们来直接对比两个设定方式的不同")]),t._v(" "),e("p",[t._v("如上面使用码上掘金展示的两种卡片，都事先设定好了容器宽度，第一种直接为图片设定宽高单位，第二种设定了"),e("code",[t._v("aspect-ratio")]),t._v("值为"),e("code",[t._v("1/1")]),t._v("，在这对比之下也就吐出了"),e("code",[t._v("aspect-ratio")]),t._v("的好处")]),t._v(" "),e("h2",{attrs:{id:"object-fit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-fit"}},[t._v("#")]),t._v(" object-fit")]),t._v(" "),e("p",[e("code",[t._v("object-fit")]),t._v("可以控制图片在容器中的显示形态，分别有：完全展开并保持原始比例，完全展开被拉伸铺满容器，铺满容器并保持原始比例但被裁剪。")]),t._v(" "),e("p",[t._v("我将父容器的宽度固定，图片的"),e("code",[t._v("aspect-ratio")]),t._v("属性设置为"),e("code",[t._v("4/3")]),t._v("，分别来看看三种不同情况的效果")]),t._v(" "),e("ul",[e("li",[t._v("当"),e("code",[t._v("object-fit")]),t._v("的值为**"),e("code",[t._v("contain")]),t._v("**的时候，图片会根据自身比例完全展开，不会在意父容器的宽度，所以不会铺满。")]),t._v(" "),e("li",[t._v("值为"),e("code",[t._v("fill")]),t._v("的时候，图片会完全展开铺满容器，但是会被拉伸，破坏掉原始的比例。")]),t._v(" "),e("li",[t._v("值为"),e("code",[t._v("cover")]),t._v("的时候，图片会保持原始比例并铺满容器，但是溢出的部分会被裁剪。")])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("其最完美的结合就是使用"),e("code",[t._v("aspect-ratio")]),t._v("设定需求的宽度和高度比，再通过设定"),e("code",[t._v("object-fit")]),t._v("值为"),e("code",[t._v("cover")]),t._v("使图片保持原来的形态，且使每个图片都保持相同的宽高，图片的问题就这样迎刃而解了！get到知识的掘友给个三连吧~")])])}),[],!1,null,null,null);v.default=a.exports}}]);